(IN-PACKAGE :METAPEG)
(DECLAIM (OPTIMIZE (SPEED 3) (SAFETY 0) (DEBUG 0)))
(DEFUN GENERATED-PARSER ()
  (LET ((*CONTEXT* (MAKE-INSTANCE 'CONTEXT :START-INDEX 0)))
    (FUNCALL (|parse_program|) 0)))
(DEFUN |parse_program| ()
  (LAMBDA (OFFSET)
    (BUILD-PARSER-FUNCTION
      "program"
      (SEQ (MANY (|parse_ws|))
           (MANY1 (|parse_rule|))
           (LIST 'ACTION NIL '|metapeg_action320|)))))
(DEFUN |parse_rule| ()
  (LAMBDA (OFFSET)
    (BUILD-PARSER-FUNCTION
      "rule"
      (SEQ (|parse_id|)
           (MANY (|parse_ws|))
           (MATCH-STRING "<-")
           (MANY (|parse_ws|))
           (|parse_ordered-expr-list|)
           (MANY (|parse_ws_or_nl|))
           (LIST 'ACTION NIL '|metapeg_action321|)))))
(DEFUN |parse_ordered-expr-list| ()
  (LAMBDA (OFFSET)
    (BUILD-PARSER-FUNCTION
      "ordered-expr-list"
      (EITHER (SEQ (|parse_expr-list|)
                   (MANY (|parse_ws|))
                   (MATCH-STRING "/")
                   (MANY (|parse_ws|))
                   (|parse_ordered-expr-list|)
                   (LIST 'ACTION NIL '|metapeg_action322|))
              (SEQ (|parse_expr-list|)
                   (LIST 'ACTION NIL '|metapeg_action323|))))))
(DEFUN |parse_expr-list| ()
  (LAMBDA (OFFSET)
    (BUILD-PARSER-FUNCTION
      "expr-list"
      (SEQ (|parse_expr|)
           (MANY (SEQ (MANY1 (|parse_ws|)) (|parse_expr-list|)))
           (LIST 'ACTION NIL '|metapeg_action324|)))))
(DEFUN |parse_expr| ()
  (LAMBDA (OFFSET)
    (BUILD-PARSER-FUNCTION
      "expr"
      (EITHER (SEQ (|parse_simple-expr|)
                   (MATCH-STRING "*")
                   (LIST 'ACTION NIL '|metapeg_action325|))
              (SEQ (|parse_simple-expr|)
                   (MATCH-STRING "+")
                   (LIST 'ACTION NIL '|metapeg_action326|))
              (SEQ (|parse_simple-expr|)
                   (MATCH-STRING "?")
                   (LIST 'ACTION NIL '|metapeg_action327|))
              (SEQ (|parse_simple-expr|)
                   (LIST 'ACTION NIL '|metapeg_action328|))))))
(DEFUN |parse_simple-expr| ()
  (LAMBDA (OFFSET)
    (BUILD-PARSER-FUNCTION
      "simple-expr"
      (EITHER (SEQ (|parse_string|) (LIST 'ACTION NIL '|metapeg_action329|))
              (|parse_action|)
              (SEQ (MATCH-STRING "&")
                   (|parse_simple-expr|)
                   (LIST 'ACTION NIL '|metapeg_action330|))
              (SEQ (MATCH-STRING "@")
                   (|parse_id|)
                   (LIST 'ACTION NIL '|metapeg_action331|))
              (SEQ (|parse_id|) (LIST 'ACTION NIL '|metapeg_action332|))
              (SEQ (|parse_bracketed-rule|)
                   (LIST 'ACTION NIL '|metapeg_action333|))
              (MATCH-STRING "!.")
              (SEQ (MATCH-STRING "!")
                   (|parse_expr|)
                   (LIST 'ACTION NIL '|metapeg_action334|))
              (SEQ (|parse_character-class|)
                   (LIST 'ACTION NIL '|metapeg_action335|))
              (SEQ (MATCH-STRING ".")
                   (LIST 'ACTION NIL '|metapeg_action336|))))))
(DEFUN |parse_bracketed-rule| ()
  (LAMBDA (OFFSET)
    (BUILD-PARSER-FUNCTION
      "bracketed-rule"
      (EITHER (MATCH-STRING "()")
              (SEQ (MATCH-STRING "(")
                   (MANY (|parse_ws|))
                   (|parse_ordered-expr-list|)
                   (MANY (|parse_ws|))
                   (MATCH-STRING ")")
                   (LIST 'ACTION NIL '|metapeg_action337|))))))
(DEFUN |parse_id| ()
  (LAMBDA (OFFSET)
    (BUILD-PARSER-FUNCTION
      "id"
      (SEQ (MANY1 (MATCH-CHAR '(#\A #\B #\C #\D #\E #\F #\G #\H #\I #\J #\K #\L
                                #\M #\N #\O #\P #\Q #\R #\S #\T #\U #\V #\W #\X
                                #\Y #\Z #\a #\b #\c #\d #\e #\f #\g #\h #\i #\j
                                #\k #\l #\m #\n #\o #\p #\q #\r #\s #\t #\u #\v
                                #\w #\x #\y #\z #\- #\_)))
           (LIST 'ACTION NIL '|metapeg_action338|)))))
(DEFUN |parse_character-class| ()
  (LAMBDA (OFFSET)
    (BUILD-PARSER-FUNCTION
      "character-class"
      (SEQ (MATCH-STRING "[")
           (MANY1 (SEQ (|parse_not_right_bracket|) (MATCH-ANY-CHAR 'DUMMY)))
           (MATCH-STRING "]")
           (LIST 'ACTION NIL '|metapeg_action339|)))))
(DEFUN |parse_string| ()
  (LAMBDA (OFFSET)
    (BUILD-PARSER-FUNCTION
      "string"
      (SEQ (MATCH-CHAR '(#\"))
           (MANY (SEQ (NEGATE (MATCH-CHAR '(#\"))) (MATCH-ANY-CHAR 'DUMMY)))
           (MATCH-CHAR '(#\"))
           (LIST 'ACTION NIL '|metapeg_action340|)))))
(DEFUN |parse_action| ()
  (LAMBDA (OFFSET)
    (BUILD-PARSER-FUNCTION
      "action"
      (SEQ (MATCH-CHAR '(#\{))
           (MANY (SEQ (NEGATE (MATCH-CHAR '(#\}))) (MATCH-ANY-CHAR 'DUMMY)))
           (MATCH-CHAR '(#\}))
           (LIST 'ACTION NIL '|metapeg_action341|)))))
(DEFUN |parse_not_right_bracket| ()
  (LAMBDA (OFFSET)
    (BUILD-PARSER-FUNCTION "not_right_bracket" (NEGATE (MATCH-STRING "]")))))
(DEFUN |parse_ws| ()
  (LAMBDA (OFFSET) (BUILD-PARSER-FUNCTION "ws" (MATCH-CHAR '(#\  #\Tab)))))
(DEFUN |parse_nl| ()
  (LAMBDA (OFFSET) (BUILD-PARSER-FUNCTION "nl" (MATCH-CHAR '(#\Newline)))))
(DEFUN |parse_ws_or_nl| ()
  (LAMBDA (OFFSET)
    (BUILD-PARSER-FUNCTION "ws_or_nl" (EITHER (|parse_ws|) (|parse_nl|)))))

 
(defun |metapeg_action341| (data)  
	(let ((action-name (gen-action-name)))
	 (push (list action-name (char-list-to-string (fix-escapes (zip-second (second data))))) *actions*)
	 `(list 'action nil ',action-name))
 )
(defun |metapeg_action340| (data)  `(match-string ,(char-list-to-string (zip-second (second data))))  )
(defun |metapeg_action339| (data)  `(match-char ',(fix-escapes2 (zip-second (second data))))  )
(defun |metapeg_action338| (data)  (char-list-to-string (first data))  )
(defun |metapeg_action337| (data)  (third data)  )
(defun |metapeg_action336| (data)  (declare (ignore data)) `(match-any-char 'dummy)  )
(defun |metapeg_action335| (data)  (first data)  )
(defun |metapeg_action334| (data)  `(negate ,(second data))  )
(defun |metapeg_action333| (data)  (first data)  )
(defun |metapeg_action332| (data)  
	`(,(make-name (first data)))
 )
(defun |metapeg_action331| (data)  `(match ,(second data))  )
(defun |metapeg_action330| (data)  `(follow ,(second data))  )
(defun |metapeg_action329| (data)  (first data)  )
(defun |metapeg_action328| (data)  (first data)  )
(defun |metapeg_action327| (data)  `(optional ,(first data))  )
(defun |metapeg_action326| (data)  `(many1 ,(first data))  )
(defun |metapeg_action325| (data)  `(many ,(first data))  )
(defun |metapeg_action324| (data)  (if (or (equal (second data) "") (null (second data)))
					     (first data)
					     (let ((tail (second (first (second data)))))
						  (if (equal (first tail) 'seq)
		   			              `(seq ,(first data) ,@(rest tail))
		   			              `(seq ,(first data) ,tail))))  )
(defun |metapeg_action323| (data)  (first data)  )
(defun |metapeg_action322| (data)  
(let ((tail (fifth data)))
	(if (equal (first tail) 'either)
	    `(either ,(first data) ,@(rest tail))
	    `(either ,(first data) ,(fifth data))))
 )
(defun |metapeg_action321| (data)  `(defun ,(make-name (first data)) ()
	 (lambda (offset)
	  (build-parser-function ,(first data) ,(fifth data))))  )
(defun |metapeg_action320| (data) 
`((in-package :metapeg)	
 (declaim (optimize (speed 3) (safety 0) (debug 0)))
  (defun generated-parser ()
	(let ((*context* (make-instance 'context :start-index 0)))
	   (funcall (|parse_program|) 0)))
	,@(second data))
 )